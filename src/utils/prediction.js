import { analyseMarche } from '../services/groqService.js';

// üìä G√©n√®re une s√©quence de valeurs al√©atoires avec 14 d√©cimales
export function creerSequenceAleatoire(taille = 4) {
  return Array.from({ length: taille }, () =>
    parseFloat((Math.random() * 100).toFixed(14))
  );
}

// ü§ñ G√©n√®re une pr√©diction en analysant la s√©quence al√©atoire
export async function genererNouvellePrediction() {
  const sequence = creerSequenceAleatoire();

  let texte;
  try {
    texte = await analyseMarche(sequence);
    if (typeof texte !== 'string') {
      throw new Error('R√©ponse non valide');
    }
  } catch (err) {
    console.error('Erreur lors de la g√©n√©ration de la pr√©diction:', err.message);
    texte = 'Erreur lors de la pr√©diction';
  }

  // üß† D√©tection du mouvement bas√© sur le texte
  let mouvement = 'stable';
  if (/hausse/i.test(texte)) mouvement = 'hausse';
  else if (/baisse/i.test(texte)) mouvement = 'baisse';

  return { texte, mouvement };
}
